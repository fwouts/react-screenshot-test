version: 2.1
anchors:
  defaults: &defaults
    docker:
      - image: circleci/node:lts-browsers
    working_directory: ~/repo
  restore_cache: &restore_cache
    restore_cache:
      keys:
        - v1-dependencies-{{ checksum "package.json" }}
        # fallback to using the latest cache if no exact match is found
        - v1-dependencies-
  save_cache: &save_cache
    save_cache:
      paths:
        - node_modules
      key: v1-dependencies-{{ checksum "package.json" }}
jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - *restore_cache
      - run: yarn install
      - *save_cache
      - run: yarn build
  lint:
    <<: *defaults
    steps:
      - checkout
      - *restore_cache
      - run: yarn install
      - *save_cache
      - run: yarn lint:check
  unit-test:
    <<: *defaults
    steps:
      - checkout
      - *restore_cache
      - run: yarn install
      - *save_cache
      - run: yarn unit-test
  screenshot-test-local:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Set up Git LFS
          command: |
            sudo apt-get install -y git-lfs
            git lfs install
            git lfs pull
      - run:
          name: Install Chrome dependencies
          command: |
            sudo apt-get update \
            && sudo apt-get install -y wget gnupg ca-certificates procps libxss1 \
            && wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add - \
            && sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list' \
            && sudo apt-get update \
            # We install Chrome to get all the OS level dependencies, but Chrome itself
            # is not actually used as it's packaged in the node puppeteer library.
            # Alternatively, we could could include the entire dep list ourselves
            # (https://github.com/puppeteer/puppeteer/blob/master/docs/troubleshooting.md#chrome-headless-doesnt-launch-on-unix)
            # but that seems too easy to get out of date.
            && sudo apt-get install -y google-chrome-stable \
            && sudo rm -rf /var/lib/apt/lists/* \
            && sudo wget --quiet https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh -O /usr/sbin/wait-for-it.sh \
            && sudo chmod +x /usr/sbin/wait-for-it.sh
      - *restore_cache
      - run: yarn install
      - *save_cache
      - run: yarn screenshot-test-local
      - store_artifacts:
          path: src/tests/__screenshots__
          destination: snapshots
  screenshot-test-percy:
    <<: *defaults
    steps:
      - checkout
      - *restore_cache
      - run: yarn install
      - *save_cache
      - run: yarn screenshot-test-percy
  docker-image:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker
      - run: docker build .
  example-local:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Set up Git LFS
          command: |
            sudo apt-get install -y git-lfs
            git lfs install
            git lfs pull
      - run: cd example && yarn install
      - run: cd example && yarn screenshot-test-local
      - store_artifacts:
          path: example/__screenshots__
          destination: example-screenshots
  example-percy:
    <<: *defaults
    steps:
      - checkout
      - run: cd example && yarn install
      - run: cd example && PERCY_TOKEN=$PERCY_TOKEN_EXAMPLE yarn screenshot-test-percy
workflows:
  check:
    jobs:
      - build
      - lint
      - unit-test
      - screenshot-test-local
      - screenshot-test-percy
      - docker-image
      - example-local
      - example-percy
